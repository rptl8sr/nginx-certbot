# HTTP server and ACME challenges
server {
    listen 80;
    server_name ${DOMAIN_NAME};
    http2 on;

    # Block unwanted user agents
    if ($http_user_agent ~* "l9explore|l9tcpid|scanner|bot") {
        return 403;
    }

    # Disable private files access
    location ~* ^/(\.env|\.git|docker-compose\.yml|\.aws|config\.json) {
        deny all;
        return 403;
    }

    # ACME challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirect akk other http requests
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl;
    server_name ${DOMAIN_NAME};
    http2 on;

    # Block unwanted user agents
    if ($http_user_agent ~* "l9explore|l9tcpid|scanner|bot") {
        return 403;
    }

    # Disable private files access
    location ~* ^/(\.env|\.git|docker-compose\.yml|\.aws|config\.json) {
        deny all;
        return 403;
    }

    # Limit request rate to prevent abuse
    limit_req zone=mylimit burst=20 nodelay;
    
    # Disable caching
    add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;

    # SSL certificate paths
    ssl_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN_NAME}/privkey.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/${DOMAIN_NAME}/chain.pem; # Make sure this path is correct

    # SSL optimization
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Hide nginx version
    server_tokens off;

    # Limit request size (optional, for security)
    client_max_body_size 10M;

    # Main location block
    location / {
        root /var/www/html;
        index index.html;
        try_files $uri $uri/ =404;
        limit_except GET HEAD POST {
            deny all;
        }
    }
}
